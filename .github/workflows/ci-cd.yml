name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main  # Ejecutar cuando se haga push a la rama principal
  pull_request:
    branches:
      - main  # Ejecutar para PRs hacia la rama principal

jobs:
  build:
    runs-on: ubuntu-latest  # El entorno de ejecución (Ubuntu)

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Acción para obtener el código del repositorio

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Puedes usar la versión de Python que prefieras

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Instalar dependencias desde el archivo requirements.txt

      - name: Run migrations
        run: |
          python manage.py migrate  # Ejecutar migraciones de la base de datos

      - name: Run tests
        run: |
          python manage.py test  # Ejecutar las pruebas de Django

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1  # O la región que uses
          
      - name: Deploy to EC2 using SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceIds,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=[
              "cd /path/to/your/project",
              "git pull origin main",  # Actualizar el código desde GitHub
              "source /path/to/your/venv/bin/activate",  # Activar el entorno virtual
              "pip install -r requirements.txt",  # Instalar dependencias
              "python manage.py migrate",  # Ejecutar migraciones de la base de datos
              "python manage.py collectstatic --noinput",  # Recoger archivos estáticos
              "sudo systemctl restart gunicorn",  # Reiniciar el servicio Gunicorn
              "sudo systemctl restart nginx"  # Reiniciar Nginx (si lo usas)
            ]'
